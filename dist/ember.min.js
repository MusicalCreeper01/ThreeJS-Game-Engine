function Ember(a,c){if(void 0==THREE)return console.error("Three.js isn't loaded!"),{};82>THREE.REVISION&&console.warn("Ember is tested with Three.js version >82, you are using "+THREE.REVISION+". Things may break if there have been API changes, please be careful!");var b=this;this.element=a;this.name="My New Ember Game";if(void 0!=c&&c.save)for(var d in c)this[d]=c[d];this["super"]=function(){};this.scenes=[];this.scene={};this.SceneManager=new function(){this.load=function(a){void 0==b.three?console.error("Three.js is not initialized, call Ember.begin() before loading scenes"):
isNaN(a)?b.scenes.forEach(function(e){e.name==a&&this._load(b.scenes[e])}):this._load(b.scenes[a])};this._load=function(a){b.scene=a;console.log("Adding "+a.objects.length+" objects from new scene");for(var e=0;e<a.objects.length;++e)console.log(a.objects[e]._tmesh()),b.three.scene.add(a.objects[e]._tmesh())};this.add=function(a){b.scenes.push(a)}};this.begin=function(){function a(){requestAnimationFrame(a);g.updateProjectionMatrix();f.setViewport(0,0,c,d);f.render(h,g)}b.three={};var c=b.element.offsetWidth,
d=b.element.offsetHeight;void 0!=c&&0!=c&&void 0!=d&&0!=d||console.error("Width/Height of the game element is 0! ");console.log(c+"/"+d);var h=new THREE.Scene;b.three.scene=h;var g=new THREE.PerspectiveCamera(75,c/d,.1,1E3);g.position.z=5;h.add(g);h.add(new THREE.AmbientLight(16777215));var f=new THREE.WebGLRenderer({antialias:!0});f.setPixelRatio(c/d);f.setSize(c,d);b.element.appendChild(f.domElement);f.domElement.style.width="100%";f.domElement.style.height="100%";b.three.renderer=f;a()};this.save=
function(){this.save=!0;return JSON.stringify(this)};this.load=function(a){a=JSON.parse(a);for(var b in a)this[b]=a[b]}}Ember.quaternions=!1;Ember.Vector3=function(a,c,b){this.z=this.y=this.x=0;void 0!=a&&void 0!=c&&void 0!=b?(this.x=a,this.y=c,this.z=b):void 0!=a&&(this.z=this.y=this.x=a);this.set=function(a,b,c){void 0!=a&&void 0!=b&&void 0!=c&&(this.x=a,this.y=b,this.z=c);return this}};
Ember.Color=function(a,c,b,d){this.r=255;this.g=86;this.b=0;this.a=1;void 0!=a&&void 0!=c&&void 0!=b&&void 0!=d?(this.r=a,this.g=c,this.b=b,this.a=d):void 0!=a&&void 0!=c&&void 0!=b?(this.r=a,this.g=c,this.b=b):void 0!=a&&(void 0!=Ember.Util.Color?(a=Ember.Util.Color.fromHex(a),this.r=a.r,this.g=a.g,this.b=a.b):console.error("Hex input to the Ember.Color constructor is currently not supported due to the color utilities modules not being included"))};
Ember.GameObject=function(){this.name="New GameObject";this.layer=0;this.tags=[];this.active=!0;this.mesh={};this.material={};this.scripts=[];this._tmesh=function(){return new THREE.Mesh(this.mesh,this.material)};this.position=new Ember.Vector3;this.rotation=Ember.quaternions?new Ember.Vector3:new THREE.Quaternion;this.scale=new Ember.Vector3};Ember.Scene=function(){this.name="New Scene";this.objects=[];this.add=function(a){this.objects.push(a)}};Ember.Util={};Ember.Util.Color={fromHex:function(a){return hexToRgb(a)},toHex:function(a,c,b){return rgbToHex(a,c,b)}};function componentToHex(a){a=a.toString(16);return 1==a.length?"0"+a:a}function rgbToHex(a,c,b){return"#"+componentToHex(a)+componentToHex(c)+componentToHex(b)}
function hexToRgb(a){a=a.replace(/^#?([a-f\d])([a-f\d])([a-f\d])$/i,function(a,b,d,e){return b+b+d+d+e+e});return(a=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(a))?{r:parseInt(a[1],16),g:parseInt(a[2],16),b:parseInt(a[3],16)}:null};
